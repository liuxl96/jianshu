import React, { Component } from 'react';
import {
  DetailWrapper,
  Header,
  Content
} from './style';

class Detail extends Component {
  render() {
    return (
      <DetailWrapper>
        <Header></Header>
        <Content>
          <img src='https://pic3.zhimg.com/v2-556dcb63c785315b18b6042bb95f3b7f_720w.jpg' alt='error' />
          <p>一个非常简洁的APP，功能也很简单---作为一个时空胶囊，帮助你保管写给未来的信。这封信邮寄出去后，你不会看到底稿，唯一再看见的方式是：当时间流逝，到了你当初希望的收件时间时，你会在留下的邮箱中，收到这样一封邮件。10年后，20年后，甚至时间更长，你会在很平常的某一天，收到当初的你，写给现在的你的寄语。</p>
          <p>一个非常简洁的APP，功能也很简单---作为一个时空胶囊，帮助你保管写给未来的信。这封信邮寄出去后，你不会看到底稿，唯一再看见的方式是：当时间流逝，到了你当初希望的收件时间时，你会在留下的邮箱中，收到这样一封邮件。10年后，20年后，甚至时间更长，你会在很平常的某一天，收到当初的你，写给现在的你的寄语。</p>
          <p>一个非常简洁的APP，功能也很简单---作为一个时空胶囊，帮助你保管写给未来的信。这封信邮寄出去后，你不会看到底稿，唯一再看见的方式是：当时间流逝，到了你当初希望的收件时间时，你会在留下的邮箱中，收到这样一封邮件。10年后，20年后，甚至时间更长，你会在很平常的某一天，收到当初的你，写给现在的你的寄语。</p>
          <p>一个非常简洁的APP，功能也很简单---作为一个时空胶囊，帮助你保管写给未来的信。这封信邮寄出去后，你不会看到底稿，唯一再看见的方式是：当时间流逝，到了你当初希望的收件时间时，你会在留下的邮箱中，收到这样一封邮件。10年后，20年后，甚至时间更长，你会在很平常的某一天，收到当初的你，写给现在的你的寄语。</p>
          <p>一个非常简洁的APP，功能也很简单---作为一个时空胶囊，帮助你保管写给未来的信。这封信邮寄出去后，你不会看到底稿，唯一再看见的方式是：当时间流逝，到了你当初希望的收件时间时，你会在留下的邮箱中，收到这样一封邮件。10年后，20年后，甚至时间更长，你会在很平常的某一天，收到当初的你，写给现在的你的寄语。</p>
        </Content>
      </DetailWrapper>
    )
  }
}

export default Detail;